/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Zip
 #	author : miyako
 #	2016/03/08
 #
 # --------------------------------------------------------------------------------*/



// --- Zip
void Unzip(sLONG_PTR *pResult, PackagePtr pParams);
void Zip(sLONG_PTR *pResult, PackagePtr pParams);

#include "zip.h"
#include "unzip.h"

#if VERSIONMAC
#include "codepage/cpmap.h"
#define MAX_LENGTH_FOR_ENCODING_NAME (255)
#endif 

#if VERSIONWIN
#include <mlang.h>
#endif

#if VERSIONMAC
typedef std::string absolute_path_t;
#define folder_separator '/'
#else
typedef std::wstring absolute_path_t;
#define folder_separator L'\\'
#endif    

typedef std::vector<absolute_path_t> absolute_paths_t;

typedef std::string relative_path_t;

typedef std::vector<relative_path_t> relative_paths_t;

typedef PA_long32 method_id_t;

#define BUFFER_SIZE 8192

#include <fstream>

bool create_folder(absolute_path_t& absolute_path);
void create_parent_folder(absolute_path_t& absolute_path);

void copy_path(C_TEXT& t, absolute_path_t& p);
                  
void get_subpaths(C_TEXT& Param, 
                  relative_paths_t *relative_paths, 
                  absolute_paths_t *absolute_paths, 
                  bool ignore_dot,
                  bool with_atttributes,
                  bool without_enclosing_folder);                  
                  
#define CHARSET_AUTOMATIC (-1)

#ifdef WIN32
#include <time.h>
#include <Shlobj.h>
using namespace std;
#define PATH_MAX _MAX_PATH
int wcs_to_utf8(wstring& wstr, string& str);
int utf8_to_wcs(string& str, wstring& wstr);

void unescape_path(string &path);
void unescape_path(wstring &path);

void escape_path(string &path);
void escape_path(wstring &path);

void get_last_path_component(wstring &path, string &path_component);

#endif